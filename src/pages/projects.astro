---
import { Image } from "astro:assets";
import { getEntry, type CollectionEntry } from "astro:content";
import GithubContributionGraph from "../components/GithubContributionGraph.astro";
import ImagePlaceholder from "../components/icons/ImagePlaceholder.astro";
import TopContributors from "../components/TopContributors.astro";
import Layout from "../layouts/Layout.astro";

const { data: projects } = (await getEntry(
  "projects",
  "projects",
)) as CollectionEntry<"projects">;

const getContributionColor = (level: 0 | 1 | 2 | 3 | 4): string => {
  switch (level) {
    case 0:
      return "bg-gray-100";
    case 1:
      return "bg-green-200";
    case 2:
      return "bg-green-300";
    case 3:
      return "bg-green-500";
    case 4:
      return "bg-green-700";
  }
};
---

<Layout
  title="Projects"
  description="Explore our open-source AI projects at CMU Data Science Club, including CMUGPT, Tetris AI, and data analysis tools. Join our GitHub community and contribute to cutting-edge machine learning projects."
>
  <main class="min-h-screen p-8 pt-24">
    <div class="max-w-6xl mx-auto">
      <h1 class="text-4xl font-bold text-[#082b57] mb-8 text-center">
        Our Projects
      </h1>

      <!-- GitHub Activity -->
      <div class="mb-8">
        <!-- Desktop grid layout -->
        <div class="hidden md:grid md:grid-cols-[1fr_300px] md:gap-8">
          <h2 class="text-2xl font-semibold text-[#082b57]">
            Organization Activity
          </h2>
          <h2 class="text-2xl font-semibold text-[#082b57]">
            Top Contributors
          </h2>

          <!-- Graph -->
          <div
            class="bg-white/20 backdrop-blur-sm rounded-lg p-6 border border-white/10"
          >
            <GithubContributionGraph showLegend={false} />
            <div class="w-full px-2 mt-2">
              <div class="flex items-center justify-between gap-2">
                <div id="contribution-count" class="text-sm text-gray-600">
                  Loading contributions...
                </div>
                <div class="flex items-center gap-2 text-xs text-gray-500">
                  <span>Less</span>
                  {
                    ([0, 1, 2, 3, 4] as const).map((level) => (
                      <div
                        class={`w-3 h-3 rounded-sm ${getContributionColor(level)}`}
                      />
                    ))
                  }
                  <span>More</span>
                </div>
              </div>
            </div>
          </div>

          <!-- Desktop Contributors -->
          <div
            class="bg-white/20 backdrop-blur-sm rounded-lg p-6 border border-white/10"
          >
            <TopContributors />
          </div>
        </div>

        <!-- Mobile layout -->
        <div class="md:hidden">
          <!-- Graph section with scroll -->
          <div class="mb-8">
            <h2 class="text-2xl font-semibold text-[#082b57] mb-4">
              Organization Activity
            </h2>
            <div class="overflow-x-auto">
              <div class="min-w-[800px]">
                <div
                  class="bg-white/20 backdrop-blur-sm rounded-lg p-6 border border-white/10"
                >
                  <GithubContributionGraph showLegend={false} />
                  <div class="w-full px-2 mt-2">
                    <div class="flex items-center justify-between gap-2">
                      <div
                        id="contribution-count"
                        class="text-sm text-gray-600"
                      >
                        Loading contributions...
                      </div>
                      <div
                        class="flex items-center gap-2 text-xs text-gray-500"
                      >
                        <span>Less</span>
                        {
                          ([0, 1, 2, 3, 4] as const).map((level) => (
                            <div
                              class={`w-3 h-3 rounded-sm ${getContributionColor(level)}`}
                            />
                          ))
                        }
                        <span>More</span>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>

          <!-- Mobile Contributors -->
          <div>
            <h2 class="text-2xl font-semibold text-[#082b57] mb-4">
              Top Contributors
            </h2>
            <div
              class="bg-white/20 backdrop-blur-sm rounded-lg p-6 border border-white/10"
            >
              <TopContributors />
            </div>
          </div>
        </div>
      </div>

      <!-- Projects Grid -->
      <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
        {
          projects.map((project) => (
            <div class="bg-white/20 backdrop-blur-sm rounded-lg p-6 border border-white/10">
              <div class="flex gap-4">
                {project.thumbnail ? (
                  <Image
                    src={project.thumbnail}
                    alt={`${project.title} thumbnail`}
                    width={192}
                    height={192}
                    format="webp"
                    quality={85}
                    class="w-24 h-24 object-cover rounded-lg"
                  />
                ) : (
                  <ImagePlaceholder class="w-24 h-24 rounded-lg" />
                )}
                <div class="flex-1">
                  <h3 class="text-xl font-semibold text-[#082b57] mb-2">
                    {project.title}
                  </h3>
                  <p class="text-sm text-gray-600 mb-3">
                    {project.description}
                  </p>
                  <div class="flex gap-3">
                    {project.github && (
                      <a
                        href={project.github}
                        target="_blank"
                        rel="noopener noreferrer"
                        class="text-sm text-gray-600 hover:text-blue-800 flex items-center gap-1"
                        data-umami-event={`Project Link Click - ${project.title} (Github)`}
                      >
                        <svg
                          class="w-4 h-4"
                          viewBox="0 0 24 24"
                          fill="currentColor"
                        >
                          <path d="M12 0C5.37 0 0 5.37 0 12c0 5.31 3.435 9.795 8.205 11.385.6.105.825-.255.825-.57 0-.285-.015-1.23-.015-2.235-3.015.555-3.795-.735-4.035-1.41-.135-.345-.72-1.41-1.23-1.695-.42-.225-1.02-.78-.015-.795.945-.015 1.62.87 1.845 1.23 1.08 1.815 2.805 1.305 3.495.99.105-.78.42-1.305.765-1.605-2.67-.3-5.46-1.335-5.46-5.925 0-1.305.465-2.385 1.23-3.225-.12-.3-.54-1.53.12-3.18 0 0 1.005-.315 3.3 1.23.96-.27 1.98-.405 3-.405s2.04.135 3 .405c2.295-1.56 3.3-1.23 3.3-1.23.66 1.65.24 2.88.12 3.18.765.84 1.23 1.905 1.23 3.225 0 4.605-2.805 5.625-5.475 5.925.435.375.81 1.095.81 2.22 0 1.605-.015 2.895-.015 3.3 0 .315.225.69.825.57A12.02 12.02 0 0024 12c0-6.63-5.37-12-12-12z" />
                        </svg>
                      </a>
                    )}
                    {project.website && (
                      <a
                        href={project.website}
                        target="_blank"
                        rel="noopener noreferrer"
                        class="text-sm text-gray-600 hover:text-blue-800 flex items-center gap-1"
                        data-umami-event={`Project Link Click - ${project.title} (Website)`}
                      >
                        <svg
                          class="w-4 h-4"
                          viewBox="0 0 24 24"
                          fill="none"
                          stroke="currentColor"
                          stroke-width="2"
                          stroke-linecap="round"
                          stroke-linejoin="round"
                        >
                          <circle cx="12" cy="12" r="10" />
                          <line x1="2" y1="12" x2="22" y2="12" />
                          <path d="M12 2a15.3 15.3 0 0 1 4 10 15.3 15.3 0 0 1-4 10 15.3 15.3 0 0 1-4-10 15.3 15.3 0 0 1 4-10z" />
                        </svg>
                      </a>
                    )}
                  </div>
                </div>
              </div>
              {project.leaders.length > 0 && (
                <div class="mt-4 pt-4 border-t border-gray-200">
                  <h4 class="text-sm font-semibold text-gray-700 mb-2">
                    Project Leaders
                  </h4>
                  <div class="flex flex-wrap gap-2">
                    {project.leaders.map((leader) => (
                      <div class="flex items-center gap-1 text-sm text-gray-600">
                        {leader.github ? (
                          <a
                            href={`https://github.com/${leader.github}`}
                            target="_blank"
                            rel="noopener noreferrer"
                            class="hover:text-blue-600"
                            data-umami-event={`Project Leader Click - ${leader.name}`}
                          >
                            {leader.name}
                          </a>
                        ) : (
                          <span>{leader.name}</span>
                        )}
                        <span class="text-gray-400">({leader.role})</span>
                      </div>
                    ))}
                  </div>
                </div>
              )}
            </div>
          ))
        }
      </div>
    </div>
  </main>
</Layout>

<script>
  const totalEl = document.getElementById("total-contributions");
  const countEls = document.querySelectorAll("#contribution-count");

  if (totalEl && countEls.length > 0) {
    const total = totalEl.dataset.total;
    countEls.forEach((el) => {
      el.textContent = `${Number(total).toLocaleString()} contributions in the last year`;
    });
  }
</script>

<style>
  /* Glass effect styles */
  .backdrop-blur-sm {
    position: relative;
    backdrop-filter: blur(6px);
    -webkit-backdrop-filter: blur(6px);
  }

  .backdrop-blur-sm::before {
    content: "";
    position: absolute;
    inset: 0;
    border-radius: 0.5rem;
    padding: 1px;
    background: linear-gradient(
      45deg,
      rgba(255, 255, 255, 0.2),
      rgba(255, 255, 255, 0.05)
    );
    -webkit-mask:
      linear-gradient(#fff 0 0) content-box,
      linear-gradient(#fff 0 0);
    mask:
      linear-gradient(#fff 0 0) content-box,
      linear-gradient(#fff 0 0);
    -webkit-mask-composite: xor;
    mask-composite: exclude;
    pointer-events: none;
  }
</style>
