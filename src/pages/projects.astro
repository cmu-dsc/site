---
import GithubContributionGraph from "../components/GithubContributionGraph.astro";
import Layout from "../layouts/Layout.astro";

const getContributionColor = (level: 0 | 1 | 2 | 3 | 4): string => {
  switch (level) {
    case 0:
      return "bg-gray-100";
    case 1:
      return "bg-green-200";
    case 2:
      return "bg-green-300";
    case 3:
      return "bg-green-500";
    case 4:
      return "bg-green-700";
  }
};
---

<Layout title="Projects - CMU Data Science Club">
  <main class="min-h-screen p-8 pt-24">
    <div class="max-w-6xl mx-auto">
      <h1 class="text-4xl font-bold text-[#082b57] mb-8 text-center">
        Our Projects
      </h1>

      <!-- GitHub Activity -->
      <div class="mb-12">
        <h2 class="text-2xl font-semibold text-[#082b57] mb-4 text-center">
          Organization Activity
        </h2>
        <div class="flex flex-col items-center">
          <!-- Scrollable container with graph -->
          <div class="w-full overflow-x-auto md:overflow-visible">
            <div class="min-w-[800px] md:w-[800px] mx-auto">
              <div
                class="bg-white/20 backdrop-blur-sm rounded-lg p-6 border border-white/10 mb-4"
              >
                <div class="flex justify-center">
                  <GithubContributionGraph showLegend={false} />
                </div>
              </div>
            </div>
          </div>
          <!-- Count and Legend outside scroll container -->
          <div class="w-full md:w-[800px] mx-auto px-2">
            <div
              class="flex flex-col md:flex-row md:items-center md:justify-between gap-2"
            >
              <div id="contribution-count" class="text-sm text-gray-600">
                Loading contributions...
              </div>
              <div class="flex items-center gap-2 text-xs text-gray-500">
                <span>Less</span>
                {
                  ([0, 1, 2, 3, 4] as const).map((level) => (
                    <div
                      class={`w-3 h-3 rounded-sm ${getContributionColor(level)}`}
                    />
                  ))
                }
                <span>More</span>
              </div>
            </div>
          </div>
        </div>
      </div>

      <!-- Projects Grid -->
      <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
        <!-- Project cards will go here -->
      </div>
    </div>
  </main>
</Layout>

<script>
  // Update the contribution count after the component loads
  const totalEl = document.getElementById("total-contributions");
  const countEl = document.getElementById("contribution-count");
  if (totalEl && countEl) {
    const total = totalEl.dataset.total;
    countEl.textContent = `${Number(total).toLocaleString()} contributions in the last year`;
  }
</script>

<style>
  /* Glass effect styles */
  .backdrop-blur-sm {
    position: relative;
    backdrop-filter: blur(6px);
    -webkit-backdrop-filter: blur(6px);
  }

  .backdrop-blur-sm::before {
    content: "";
    position: absolute;
    inset: 0;
    border-radius: 0.5rem;
    padding: 1px;
    background: linear-gradient(
      45deg,
      rgba(255, 255, 255, 0.2),
      rgba(255, 255, 255, 0.05)
    );
    -webkit-mask:
      linear-gradient(#fff 0 0) content-box,
      linear-gradient(#fff 0 0);
    mask:
      linear-gradient(#fff 0 0) content-box,
      linear-gradient(#fff 0 0);
    -webkit-mask-composite: xor;
    mask-composite: exclude;
    pointer-events: none;
  }
</style>
