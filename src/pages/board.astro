---
import { Image } from "astro:assets";
import GithubIcon from "../icons/github.svg?raw";
import LinkedInIcon from "../icons/linkedin.svg?raw";
import Layout from "../layouts/Layout.astro";

import fall2019 from "../data/board/fall2019.json";
import fall2020 from "../data/board/fall2020.json";
import fall2021 from "../data/board/fall2021.json";
import fall2023 from "../data/board/fall2023.json";
import fall2024 from "../data/board/fall2024.json";
import spring2019 from "../data/board/spring2019.json";
import spring2020 from "../data/board/spring2020.json";
import spring2021 from "../data/board/spring2021.json";
import spring2023 from "../data/board/spring2023.json";
import spring2024 from "../data/board/spring2024.json";

interface BoardMember {
  name: string;
  title: string;
  image?: string;
  bio: string;
  github?: string;
  linkedin?: string;
}

interface SemesterData {
  semester: string;
  members: BoardMember[];
}

const boardData: SemesterData[] = [
  fall2024,
  spring2024,
  fall2023,
  spring2023,
  fall2021,
  spring2021,
  fall2020,
  spring2020,
  fall2019,
  spring2019,
];
const semesters = boardData.map((data) => data.semester);
---

<Layout title="Board - CMU Data Science Club">
  <main class="min-h-screen p-8 pt-24">
    <div class="max-w-6xl mx-auto">
      <h1 class="text-4xl font-bold text-[#082b57] mb-8 text-center">
        Our Board
      </h1>

      <!-- Semester Tabs -->
      <div class="relative mb-8 -mx-8">
        <div class="overflow-x-auto scrollbar-hide px-8">
          <div class="flex min-w-max border-b md:justify-center gap-4">
            {
              semesters.map((semester, index) => {
                const [term, year] = semester.split(" ");
                return (
                  <button
                    class="semester-tab px-4 py-2 text-[#082b57] font-medium border-b-2 whitespace-nowrap flex flex-col items-center text-center"
                    data-semester={semester}
                    data-active={index === 0}
                  >
                    <span class="text-xs uppercase tracking-wider opacity-60">
                      {term}
                    </span>
                    <span>{year}</span>
                  </button>
                );
              })
            }
          </div>
        </div>
      </div>

      <!-- Board Members Grid -->
      {
        boardData.map((data, index) => (
          <div
            class="semester-content grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 transition-opacity duration-150"
            data-semester={data.semester}
            style={`opacity: ${index === 0 ? "1" : "0"}; display: ${index === 0 ? "grid" : "none"}`}
          >
            {data.members.map((member) => (
              <div class="bg-white rounded-lg shadow-md overflow-hidden flex flex-col transform transition-all duration-200 hover:scale-[1.02] hover:shadow-lg">
                <div class="relative w-full pb-[100%] flex-shrink-0">
                  {member.image ? (
                    <Image
                      src={member.image}
                      alt={member.name}
                      width={300}
                      height={300}
                      format="webp"
                      loading="lazy"
                      class="absolute top-0 left-0 w-full h-full object-cover"
                    />
                  ) : (
                    <div class="absolute top-0 left-0 w-full h-full bg-gray-200 flex items-center justify-center">
                      <div class="text-4xl text-gray-400">
                        {member.name
                          .split(" ")
                          .map((word) => word[0])
                          .join("")}
                      </div>
                    </div>
                  )}
                </div>
                <div class="p-4 flex flex-col flex-grow">
                  <div class="flex-grow">
                    <h3 class="text-lg font-semibold text-[#082b57]">
                      {member.name}
                    </h3>
                    <p class="text-[#082b57]/80 font-medium text-sm">
                      {member.title}
                    </p>
                    <p class="text-gray-600 mt-2 text-sm">{member.bio}</p>
                  </div>
                  <div class="flex gap-3 mt-3 pt-3 border-t">
                    {member?.github && (
                      <a
                        href={member?.github}
                        target="_blank"
                        rel="noopener noreferrer"
                        class="text-gray-600 hover:text-[#082b57] transition-colors"
                      >
                        <div class="w-5 h-5" set:html={GithubIcon} />
                      </a>
                    )}
                    {member?.linkedin && (
                      <a
                        href={member?.linkedin}
                        target="_blank"
                        rel="noopener noreferrer"
                        class="text-gray-600 hover:text-[#082b57] transition-colors"
                      >
                        <div class="w-5 h-5" set:html={LinkedInIcon} />
                      </a>
                    )}
                  </div>
                </div>
              </div>
            ))}
          </div>
        ))
      }
    </div>
  </main>

  <script>
    document.addEventListener("DOMContentLoaded", () => {
      // Set initial active state for the first tab
      const firstTab = document.querySelector(".semester-tab") as HTMLElement;
      if (firstTab) {
        firstTab.setAttribute("data-active", "true");
      }

      const tabs = document.querySelectorAll(".semester-tab");
      const contents = document.querySelectorAll(".semester-content");

      tabs.forEach((tab) => {
        tab.addEventListener("click", () => {
          // Update tab styles
          tabs.forEach((t) => t.setAttribute("data-active", "false"));
          tab.setAttribute("data-active", "true");

          // Show/hide content with animation
          const selectedSemester = tab.getAttribute("data-semester");

          // First, fade out all contents
          contents.forEach((content) => {
            (content as HTMLElement).style.opacity = "0";
          });

          // Wait for fade out, then switch contents
          setTimeout(() => {
            contents.forEach((content) => {
              const contentSemester = content.getAttribute("data-semester");
              if (contentSemester === selectedSemester) {
                (content as HTMLElement).style.display = "grid";
                // Trigger reflow
                (content as HTMLElement).offsetHeight;
                // Fade in
                (content as HTMLElement).style.opacity = "1";
              } else {
                (content as HTMLElement).style.display = "none";
              }
            });
          }, 150);
        });
      });

      // Preload all images after critical content is loaded
      window.requestIdleCallback(() => {
        const allImages = Array.from(
          document.querySelectorAll(".semester-content img[data-src]"),
        )
          .map((img) => img.getAttribute("data-src"))
          .filter((src): src is string => src !== null);

        allImages.forEach((src) => {
          const link = document.createElement("link");
          link.rel = "preload";
          link.as = "image";
          link.href = src;
          link.setAttribute("importance", "low");
          document.head.appendChild(link);
        });
      });
    });
  </script>

  <style>
    .semester-tab[data-active="true"] {
      border-color: #082b57;
      color: #082b57;
    }

    .semester-tab[data-active="false"] {
      border-color: transparent;
      color: #082b57/60;
    }

    .semester-tab[data-active="false"]:hover {
      color: #082b57;
      border-color: #082b57/20;
    }

    .semester-content {
      pointer-events: none;
    }

    .semester-content[style*="display: grid"] {
      pointer-events: auto;
    }

    /* Add smooth transitions for card hover effects */
    .semester-content > div {
      transition: all 0.2s ease-in-out;
    }

    /* Hide scrollbar */
    .scrollbar-hide {
      -ms-overflow-style: none;
      scrollbar-width: none;
    }

    .scrollbar-hide::-webkit-scrollbar {
      display: none;
    }

    .semester-tab {
      border-bottom-width: 2px;
    }
  </style>
</Layout>
