---
import { Image } from "astro:assets";
import alumniData from "../data/alumni.json";
import boardData from "../data/board.json";
import GithubIcon from "../icons/github.svg?raw";
import LinkedInIcon from "../icons/linkedin.svg?raw";
import Layout from "../layouts/Layout.astro";

interface BoardMember {
  name: string;
  title: string;
  image?: string;
  bio: string;
  github?: string;
  linkedin?: string;
}

interface AlumniMember {
  name: string;
  major: string;
  gradYear: string;
  currentTitle?: string;
  boardPositions: {
    title: string;
    semesters: string[];
  }[];
  image?: string;
  github?: string;
  linkedin?: string;
}

const board = boardData as BoardMember[];
const alumni = alumniData as AlumniMember[];
---

<Layout title="Board - CMU Data Science Club">
  <main class="min-h-screen p-8 pt-24">
    <div class="max-w-6xl mx-auto">
      <h1 class="text-4xl font-bold text-[#082b57] mb-8 text-center">
        Our Board
      </h1>

      <!-- Simplified Tabs -->
      <div class="relative mb-8 -mx-8">
        <div class="overflow-x-auto scrollbar-hide px-8">
          <div class="flex justify-center gap-4 border-b">
            <button
              class="semester-tab px-4 py-2 text-[#082b57] font-medium border-b-2 whitespace-nowrap"
              data-tab="current"
              data-active="true"
            >
              Current Board
            </button>
            <button
              class="semester-tab px-4 py-2 text-[#082b57] font-medium border-b-2 whitespace-nowrap"
              data-tab="alumni"
              data-active="false"
            >
              Alumni
            </button>
          </div>
        </div>
      </div>

      <!-- Current Board Grid -->
      <div
        class="tab-content grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 transition-opacity duration-150"
        data-tab="current"
        style="opacity: 1; display: grid;"
      >
        {
          board.map((member) => (
            <div class="bg-white/20 backdrop-blur-sm rounded-lg shadow-lg overflow-hidden flex flex-col transform transition-all duration-200 hover:scale-[1.02] hover:shadow-xl hover:bg-white/30 border border-white/10">
              <div class="relative w-full pb-[100%] flex-shrink-0">
                {member.image ? (
                  <picture>
                    <source
                      srcset={member.image
                        .replace("/images/", "/optimized-images/")
                        .replace(/\.(png|jpg|jpeg)$/, ".webp")}
                      type="image/webp"
                    />
                    <Image
                      src={member.image}
                      alt={member.name}
                      width={300}
                      height={300}
                      format="webp"
                      loading="lazy"
                      class="absolute top-0 left-0 w-full h-full object-cover"
                    />
                  </picture>
                ) : (
                  <div class="absolute top-0 left-0 w-full h-full bg-gray-200/50 backdrop-blur-sm flex items-center justify-center">
                    <div class="text-4xl text-gray-500">
                      {member.name
                        .split(" ")
                        .map((word) => word[0])
                        .join("")}
                    </div>
                  </div>
                )}
              </div>
              <div class="p-4 flex flex-col flex-grow">
                <div class="flex-grow">
                  <h3 class="text-lg font-semibold text-[#082b57]">
                    {member.name}
                  </h3>
                  <p class="text-[#082b57]/80 font-medium text-sm">
                    {member.title}
                  </p>
                  <p class="text-gray-600 mt-2 text-sm">{member.bio}</p>
                </div>
                <div class="flex gap-3 mt-3 pt-3 border-t">
                  {member?.github && (
                    <a
                      href={member?.github}
                      target="_blank"
                      rel="noopener noreferrer"
                      class="text-gray-600 hover:text-[#082b57] transition-colors"
                      data-umami-event="Board Social Click"
                      data-umami-event-platform="GitHub"
                      data-umami-event-member={member.name}
                    >
                      <div class="w-5 h-5" set:html={GithubIcon} />
                    </a>
                  )}
                  {member?.linkedin && (
                    <a
                      href={member?.linkedin}
                      target="_blank"
                      rel="noopener noreferrer"
                      class="text-gray-600 hover:text-[#082b57] transition-colors"
                      data-umami-event="Board Social Click"
                      data-umami-event-platform="LinkedIn"
                      data-umami-event-member={member.name}
                    >
                      <div class="w-5 h-5" set:html={LinkedInIcon} />
                    </a>
                  )}
                </div>
              </div>
            </div>
          ))
        }
      </div>

      <!-- Alumni Grid -->
      <div
        class="tab-content grid grid-cols-1 md:grid-cols-3 lg:grid-cols-4 gap-4 transition-opacity duration-150"
        data-tab="alumni"
        style="opacity: 0; display: none;"
      >
        {
          alumni.map((member) => (
            <div class="bg-white/20 backdrop-blur-sm rounded-lg shadow-lg overflow-hidden flex flex-col transform transition-all duration-200 hover:scale-[1.02] hover:shadow-xl hover:bg-white/30 border border-white/10">
              <div class="relative w-full pb-[100%] flex-shrink-0">
                {member.image ? (
                  <picture>
                    <source
                      srcset={member.image
                        .replace("/images/", "/optimized-images/")
                        .replace(/\.(png|jpg|jpeg)$/, ".webp")}
                      type="image/webp"
                    />
                    <Image
                      src={member.image}
                      alt={member.name}
                      width={150}
                      height={150}
                      format="webp"
                      loading="lazy"
                      class="absolute top-0 left-0 w-full h-full object-cover"
                    />
                  </picture>
                ) : (
                  <div class="absolute top-0 left-0 w-full h-full bg-gray-200/50 backdrop-blur-sm flex items-center justify-center">
                    <div class="text-3xl text-gray-500">
                      {member.name
                        .split(" ")
                        .map((word) => word[0])
                        .join("")}
                    </div>
                  </div>
                )}
              </div>
              <div class="p-3 flex flex-col flex-grow">
                <div class="flex-grow">
                  <h3 class="text-base font-semibold text-[#082b57]">
                    {member.name}
                  </h3>
                  <p class="text-[#082b57]/80 font-medium text-xs">
                    {member.major}, {member.gradYear}
                  </p>
                  <div class="mt-1.5">
                    {member.boardPositions.map((position) => (
                      <div class="text-xs text-gray-600">
                        <span class="font-medium">{position.title}</span>
                        <span class="text-gray-500">
                          {" "}
                          ({position.semesters.join(", ")})
                        </span>
                      </div>
                    ))}
                  </div>
                  {member.currentTitle && (
                    <p class="text-gray-600 text-xs mt-1.5">
                      {member.currentTitle}
                    </p>
                  )}
                </div>
                <div class="flex gap-2 mt-2 pt-2 border-t">
                  {member?.github && (
                    <a
                      href={member?.github}
                      target="_blank"
                      rel="noopener noreferrer"
                      class="text-gray-600 hover:text-[#082b57] transition-colors"
                      data-umami-event="Alumni Social Click"
                      data-umami-event-platform="GitHub"
                      data-umami-event-member={member.name}
                    >
                      <div class="w-4 h-4" set:html={GithubIcon} />
                    </a>
                  )}
                  {member?.linkedin && (
                    <a
                      href={member?.linkedin}
                      target="_blank"
                      rel="noopener noreferrer"
                      class="text-gray-600 hover:text-[#082b57] transition-colors"
                      data-umami-event="Alumni Social Click"
                      data-umami-event-platform="LinkedIn"
                      data-umami-event-member={member.name}
                    >
                      <div class="w-4 h-4" set:html={LinkedInIcon} />
                    </a>
                  )}
                </div>
              </div>
            </div>
          ))
        }
      </div>
    </div>
  </main>

  <script>
    document.addEventListener("DOMContentLoaded", () => {
      const tabs = document.querySelectorAll("[data-tab]");
      const contents = document.querySelectorAll(".tab-content");

      tabs.forEach((tab) => {
        tab.addEventListener("click", () => {
          const targetTab = tab.getAttribute("data-tab");

          // Update tab styles
          tabs.forEach((t) => t.setAttribute("data-active", "false"));
          tab.setAttribute("data-active", "true");

          // Show/hide content with animation
          contents.forEach((content) => {
            const contentTab = content.getAttribute("data-tab");
            if (contentTab === targetTab) {
              (content as HTMLElement).style.display = "grid";
              setTimeout(() => {
                (content as HTMLElement).style.opacity = "1";
              }, 10);
            } else {
              (content as HTMLElement).style.opacity = "0";
              setTimeout(() => {
                (content as HTMLElement).style.display = "none";
              }, 150);
            }
          });
        });
      });
    });
  </script>

  <style>
    .semester-tab[data-active="true"] {
      border-color: #082b57;
      color: #082b57;
    }

    .semester-tab[data-active="false"] {
      border-color: transparent;
      color: #082b57/60;
    }

    .semester-tab[data-active="false"]:hover {
      color: #082b57;
      border-color: #082b57/20;
    }

    .semester-content {
      pointer-events: none;
    }

    .semester-content[style*="display: grid"] {
      pointer-events: auto;
    }

    /* Add smooth transitions for card hover effects */
    .semester-content > div {
      transition: all 0.2s ease-in-out;
      position: relative;
      backdrop-filter: blur(6px);
      -webkit-backdrop-filter: blur(6px);
    }

    .semester-content > div::before {
      content: "";
      position: absolute;
      inset: 0;
      border-radius: 0.5rem;
      padding: 1px;
      background: linear-gradient(
        45deg,
        rgba(255, 255, 255, 0.2),
        rgba(255, 255, 255, 0.05)
      );
      -webkit-mask:
        linear-gradient(#fff 0 0) content-box,
        linear-gradient(#fff 0 0);
      mask:
        linear-gradient(#fff 0 0) content-box,
        linear-gradient(#fff 0 0);
      -webkit-mask-composite: xor;
      mask-composite: exclude;
      pointer-events: none;
    }

    .semester-content > div:hover::before {
      background: linear-gradient(
        45deg,
        rgba(255, 255, 255, 0.3),
        rgba(255, 255, 255, 0.1)
      );
    }

    /* Hide scrollbar */
    .scrollbar-hide {
      -ms-overflow-style: none;
      scrollbar-width: none;
    }

    .scrollbar-hide::-webkit-scrollbar {
      display: none;
    }

    .semester-tab {
      border-bottom-width: 2px;
    }
  </style>
</Layout>
