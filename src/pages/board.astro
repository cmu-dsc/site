---
import { Image } from "astro:assets";
import { getEntry, type CollectionEntry } from "astro:content";
import GithubIcon from "../icons/github.svg?raw";
import LinkedInIcon from "../icons/linkedin.svg?raw";
import Layout from "../layouts/Layout.astro";

const { data: board } = (await getEntry(
  "board",
  "board",
)) as CollectionEntry<"board">;
const { data: alumni } = (await getEntry(
  "alumni",
  "alumni",
)) as CollectionEntry<"alumni">;

function getOptimizedImageDimensions(src: ImageMetadata, targetSize = 600) {
  let width, height;

  if (src.width < src.height) {
    // Portrait
    width = targetSize;
    height = Math.round(src.height * (targetSize / src.width));
  } else {
    // Landscape
    width = Math.round(src.width * (targetSize / src.height));
    height = targetSize;
  }

  return { width, height };
}
---

<Layout
  title="Board Members"
  description="Meet our executive board and student leaders at CMU Data Science Club. Our team of passionate AI enthusiasts is dedicated to fostering a vibrant data science community at Carnegie Mellon."
>
  <main class="min-h-screen p-8 pt-24">
    <div class="max-w-6xl mx-auto">
      <h1 class="text-4xl font-bold text-[#082b57] mb-8 text-center">
        Our Board
      </h1>

      <!-- Simplified Tabs -->
      <div class="relative mb-8 -mx-8">
        <div class="overflow-x-auto scrollbar-hide px-8">
          <div class="flex justify-center gap-4 border-b">
            <button
              class="semester-tab px-4 py-2 text-[#082b57] font-medium border-b-2 whitespace-nowrap"
              data-tab="current"
              data-active="true"
            >
              Current Board
            </button>
            <button
              class="semester-tab px-4 py-2 text-[#082b57] font-medium border-b-2 whitespace-nowrap"
              data-tab="alumni"
              data-active="false"
            >
              Alumni
            </button>
          </div>
        </div>
      </div>

      <!-- Current Board Grid -->
      <div
        class="tab-content grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 transition-opacity duration-150"
        data-tab="current"
        style="opacity: 1; display: grid;"
      >
        {
          board.map((member) => (
            <div class="bg-white/20 backdrop-blur-sm rounded-lg shadow-lg overflow-hidden flex flex-col transform transition-all duration-200 hover:scale-[1.02] hover:shadow-xl hover:bg-white/30 border border-white/10">
              <div class="relative w-full pb-[100%]">
                {member.image ? (
                  <div class="absolute inset-0">
                    <div class="relative w-full h-full">
                      <Image
                        src={member.image}
                        alt={member.name}
                        {...getOptimizedImageDimensions(member.image)}
                        format="webp"
                        quality={85}
                        class="absolute inset-0 w-full h-full object-cover"
                      />
                    </div>
                  </div>
                ) : (
                  <div class="absolute top-0 left-0 w-full h-full bg-[#082b57]/10 flex items-center justify-center text-4xl font-bold text-[#082b57]">
                    {member.name
                      .split(" ")
                      .map((n) => n[0])
                      .join("")}
                  </div>
                )}
              </div>
              <div class="p-4 flex flex-col flex-grow">
                <div class="flex-grow">
                  <h3 class="text-lg font-semibold text-[#082b57]">
                    {member.name}
                  </h3>
                  <p class="text-[#082b57]/80 font-medium text-sm">
                    {member.title}
                  </p>
                  <p class="text-gray-600 mt-2 text-sm">{member.bio}</p>
                </div>
                <div class="flex gap-3 mt-3 pt-3 border-t">
                  {member.github && (
                    <a
                      href={member.github}
                      target="_blank"
                      rel="noopener noreferrer"
                      class="text-gray-600 hover:text-[#082b57] transition-colors"
                      data-umami-event={`Board Social Click - ${member.name} (GitHub)`}
                    >
                      <div class="w-5 h-5" set:html={GithubIcon} />
                    </a>
                  )}
                  {member.linkedin && (
                    <a
                      href={member.linkedin}
                      target="_blank"
                      rel="noopener noreferrer"
                      class="text-gray-600 hover:text-[#082b57] transition-colors"
                      data-umami-event={`Board Social Click - ${member.name} (LinkedIn)`}
                    >
                      <div class="w-5 h-5" set:html={LinkedInIcon} />
                    </a>
                  )}
                </div>
              </div>
            </div>
          ))
        }
      </div>

      <!-- Alumni Grid -->
      <div
        class="tab-content grid grid-cols-1 md:grid-cols-3 lg:grid-cols-4 gap-4 transition-opacity duration-150"
        data-tab="alumni"
        style="opacity: 0; display: none;"
      >
        {
          alumni.map((member) => (
            <div class="bg-white/20 backdrop-blur-sm rounded-lg shadow-lg overflow-hidden flex flex-col transform transition-all duration-200 hover:scale-[1.02] hover:shadow-xl hover:bg-white/30 border border-white/10">
              <div class="relative w-full pb-[100%]">
                {member.image ? (
                  <div class="absolute inset-0">
                    <div class="relative w-full h-full">
                      <Image
                        src={member.image}
                        alt={member.name}
                        {...getOptimizedImageDimensions(member.image)}
                        format="webp"
                        quality={85}
                        class="absolute inset-0 w-full h-full object-cover"
                      />
                    </div>
                  </div>
                ) : (
                  <div class="absolute top-0 left-0 w-full h-full bg-[#082b57]/10 flex items-center justify-center text-3xl font-bold text-[#082b57]">
                    {member.name
                      .split(" ")
                      .map((n) => n[0])
                      .join("")}
                  </div>
                )}
              </div>
              <div class="p-3 flex flex-col flex-grow">
                <div class="flex-grow">
                  <h3 class="text-base font-semibold text-[#082b57]">
                    {member.name}
                  </h3>
                  <p class="text-[#082b57]/80 font-medium text-xs">
                    {member.major}, {member.gradYear}
                  </p>
                  <div class="mt-1.5 mb-3 space-y-0.5">
                    {member.boardPositions.map((position) => (
                      <div class="text-xs text-gray-700">
                        <span class="font-medium">{position.title}</span>
                        <span class="text-gray-500">
                          {" "}
                          ({position.semesters.join(", ")})
                        </span>
                      </div>
                    ))}
                  </div>
                </div>
                {member.currentTitle && (
                  <p class="text-xs text-gray-600 mb-2 italic">
                    Currently: {member.currentTitle}
                  </p>
                )}
                <div class="flex gap-2 mt-auto pt-2 border-t">
                  {member.linkedin && (
                    <a
                      href={member.linkedin}
                      target="_blank"
                      rel="noopener noreferrer"
                      class="text-gray-600 hover:text-[#082b57] transition-colors"
                      data-umami-event={`Alumni Social Click - ${member.name} (LinkedIn)`}
                    >
                      <div class="w-4 h-4" set:html={LinkedInIcon} />
                    </a>
                  )}
                </div>
              </div>
            </div>
          ))
        }
      </div>
    </div>
  </main>

  <script>
    document.addEventListener("DOMContentLoaded", () => {
      const tabs = document.querySelectorAll("[data-tab]");
      const contents = document.querySelectorAll(".tab-content");

      tabs.forEach((tab) => {
        tab.addEventListener("click", () => {
          const targetTab = tab.getAttribute("data-tab");

          // Update tab styles
          tabs.forEach((t) => t.setAttribute("data-active", "false"));
          tab.setAttribute("data-active", "true");

          // Show/hide content with animation
          contents.forEach((content) => {
            const contentTab = content.getAttribute("data-tab");
            if (contentTab === targetTab) {
              (content as HTMLElement).style.display = "grid";
              setTimeout(() => {
                (content as HTMLElement).style.opacity = "1";
              }, 10);
            } else {
              (content as HTMLElement).style.opacity = "0";
              setTimeout(() => {
                (content as HTMLElement).style.display = "none";
              }, 150);
            }
          });
        });
      });
    });
  </script>

  <style>
    .semester-tab[data-active="true"] {
      border-color: #082b57;
      color: #082b57;
    }

    .semester-tab[data-active="false"] {
      border-color: transparent;
      color: #082b57/60;
    }
  </style>
</Layout>
