---
interface Props {
  title: string;
  description?: string;
  type?: "website" | "article";
}

const {
  title,
  description = "CMU's premier AI and Data Science club. Join us for AI workshops, ML projects, and Data Science competitions at Carnegie Mellon University.",
  type = "website",
} = Astro.props;

const formattedTitle =
  title === "CMU Data Science Club"
    ? title
    : `${title} | CMU Data Science Club`;

const menuItems = [
  { href: "/", label: "Home", description: "Return to homepage" },
  { href: "/board", label: "Board", description: "Meet our team" },
  {
    href: "/events",
    label: "Events",
    description: "Previous workshops & activities",
  },
  {
    href: "/projects",
    label: "Projects",
    description: "Explore our open source projects & initiatives",
  },
  {
    href: "/competitions",
    label: "Competitions",
    description: "Join our data science competitions",
  },
  { href: "/sponsor", label: "Sponsor", description: "See our sponsors" },
];
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>{formattedTitle}</title>
    <script
      is:inline
      src="https://cdn.jsdelivr.net/npm/tsparticles@2.12.0/tsparticles.bundle.min.js"
    ></script>
    <meta name="description" content={description} />
    <meta
      name="keywords"
      content="CMU AI Club, Carnegie Mellon AI, CMU Artificial Intelligence Club, CMU Machine Learning Club, CMU Data Science, Carnegie Mellon University, Student Organization, Data Analytics, Machine Learning, Artificial Intelligence, Deep Learning, Pittsburgh AI"
    />
    <meta name="robots" content="index, follow" />
    <meta property="og:type" content={type} />
    <meta property="og:title" content={formattedTitle} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content="/dsc.svg" />
    <meta property="og:url" content="https://cmudsc.com" />
    <meta name="twitter:card" content="summary" />
    <meta name="twitter:title" content={formattedTitle} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:image" content="/dsc.svg" />
    <script
      is:inline
      defer
      src="https://cloud.umami.is/script.js"
      data-website-id="7899076f-1eca-4c1e-bb90-db959ce41077"></script>
    <script is:inline type="application/ld+json">
      {
        "@context": "https://schema.org",
        "@type": "Organization",
        "name": "CMU Data Science Club",
        "url": "https://cmudsc.com",
        "alternateName": [
          "CMU AI Club",
          "Carnegie Mellon AI Club",
          "Carnegie Mellon Data Science Club"
        ],
        "logo": {
          "url": "https://cmudsc.com/dsc.svg",
          "width": "512",
          "height": "512"
        },
        "description": "Carnegie Mellon's premier AI and Data Science club. Join us for workshops, projects, and competitions in artificial intelligence.",
        "keywords": "artificial intelligence, machine learning, AI research, data science, CMU AI",
        "sameAs": [
          "https://github.com/cmu-dsc",
          "https://instagram.com/cmudsc",
          "https://discord.gg/cmudsc"
        ],
        "address": {
          "@type": "PostalAddress",
          "addressLocality": "Pittsburgh",
          "addressRegion": "PA",
          "postalCode": "15213",
          "addressCountry": "US"
        },
        "parentOrganization": {
          "@type": "CollegeOrUniversity",
          "name": "Carnegie Mellon University"
        }
      }
    </script>
    <link rel="preload" href="/dsc.svg" as="image" type="image/svg+xml" />
    <link rel="preload" href="/favicon.svg" as="image" type="image/svg+xml" />
    <link
      rel="preload"
      href="https://cdn.jsdelivr.net/npm/tsparticles@2.12.0/tsparticles.bundle.min.js"
      as="script"
    />
  </head>
</html>
<body class="bg-gray-50 relative">
  <!-- Temporarily disabled banner
  <div
    id="poker-banner"
    class="w-full bg-[#082b57] text-white hidden fixed top-0 left-0 right-0 z-50"
  >
    <div class="max-w-7xl mx-auto px-4 py-2 flex items-center justify-center">
      <div class="flex items-center gap-3">
        <span class="text-xl">üèÜ</span>
        <p class="text-sm text-white">
          Join our AI Poker Competition and compete for a $100,000 prize pool! 
          <a
            href="https://poker.cmudsc.com"
            class="underline hover:text-white/90 font-medium"
            target="_blank"
            rel="noopener noreferrer"
            data-umami-event="Poker Banner CTA"
          >
            Learn more ‚Üí
          </a>
        </p>
        <button
          onclick="dismissBanner()"
          class="text-white/60 hover:text-white transition-colors p-1"
          aria-label="Dismiss banner"
        >
          <svg
            class="w-4 h-4"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M6 18L18 6M6 6l12 12"></path>
          </svg>
        </button>
      </div>
    </div>
  </div>
  -->

  <div id="tsparticles" class="absolute inset-0 -z-10"></div>

  <header
    class="fixed left-0 right-0 p-4 z-10 transition-all duration-300"
    id="header"
  >
    <nav class="max-w-7xl mx-auto flex justify-between items-center">
      <div class="flex items-center group">
        <a
          href="/"
          class="relative transform transition-all duration-300 hover:-rotate-6"
        >
          <img src="/dsc.svg" alt="CMU DSC Logo" class="h-16 w-16 mr-2" />
          <div
            class="absolute inset-0 bg-blue-400/20 rounded-full filter blur-xl opacity-0 group-hover:opacity-100 transition-opacity duration-300"
          >
          </div>
        </a>
        <a
          href="/"
          class="text-[#082b57] font-bold text-lg relative overflow-hidden"
        >
          <span class="md:inline hidden">CMU Data Science Club</span>
          <span class="md:hidden">CMU DSC</span>
          <div
            class="absolute bottom-0 left-0 w-full h-0.5 bg-gradient-to-r from-blue-500 to-purple-500 transform origin-left scale-x-0 group-hover:scale-x-100 transition-transform duration-300"
          >
          </div>
        </a>
      </div>

      <!-- Mobile Menu Button -->
      <button
        id="mobile-menu-button"
        class="md:hidden text-[#082b57] p-2 hover:bg-gray-100 rounded-lg"
        aria-label="Toggle menu"
      >
        <svg
          class="w-6 h-6"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M4 6h16M4 12h16M4 18h16"></path>
        </svg>
      </button>

      <!-- Desktop Navigation -->
      <div class="md:flex hidden items-center space-x-8">
        {
          menuItems.map((item) => (
            <a
              href={item.href}
              class="text-[#082b57] hover:text-blue-600 transition-all duration-300 relative group py-2 font-medium"
            >
              <span class="relative z-10">{item.label}</span>
              <span class="absolute inset-0 bg-blue-50 rounded-lg scale-0 group-hover:scale-100 transition-transform duration-300" />
            </a>
          ))
        }
        <a
          href="/discord"
          class="relative inline-flex items-center justify-center group"
          target="_blank"
          rel="noopener noreferrer"
        >
          <span
            class="absolute inset-0 bg-gradient-to-r from-blue-500 to-purple-500 rounded-full blur-md opacity-0 group-hover:opacity-75 transition-opacity duration-300"
          ></span>
          <span
            class="relative bg-[#082b57] text-white px-6 py-2 rounded-full hover:bg-[#082b57]/90 transition-all duration-300 text-sm font-medium"
          >
            Join Discord
          </span>
        </a>
      </div>
    </nav>

    <!-- Mobile Navigation -->
    <div
      id="mobile-menu"
      class="fixed md:hidden top-0 right-0 h-[100dvh] w-full sm:w-80 bg-white/80 backdrop-blur-lg shadow-2xl transform translate-x-full transition-all duration-300 ease-in-out z-20"
    >
      <div class="flex flex-col p-8 h-full relative">
        <div class="w-full flex justify-between items-center mb-6">
          <span class="text-[#082b57] font-bold text-xl">Menu</span>
          <button
            id="close-menu-button"
            class="text-[#082b57] p-2 hover:bg-[#082b57]/10 rounded-full transition-colors -mr-2"
            aria-label="Close menu"
          >
            <svg
              class="w-6 h-6"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M6 18L18 6M6 6l12 12"></path>
            </svg>
          </button>
        </div>

        <!-- Menu Items -->
        <div class="space-y-3">
          {
            menuItems.map((item) => (
              <a href={item.href} class="group block">
                <div class="bg-[#082b57]/5 hover:bg-[#082b57]/10 p-4 rounded-xl transition-all duration-200 transform hover:translate-x-2">
                  <div class="font-medium text-[#082b57]">{item.label}</div>
                  <div class="text-sm text-[#082b57]/60 group-hover:text-[#082b57]/80 transition-colors">
                    {item.description}
                  </div>
                </div>
              </a>
            ))
          }
        </div>

        <!-- Bottom Section -->
        <div class="mt-auto">
          <a
            href="/discord"
            class="bg-[#082b57] text-white p-4 rounded-xl hover:bg-[#082b57]/80 transition-colors text-center block"
          >
            <div class="font-medium">Join our Discord</div>
            <div class="text-sm text-white/80">
              Connect with fellow data scientists
            </div>
          </a>
        </div>
      </div>
    </div>
  </header>

  <div
    id="menu-backdrop"
    class="fixed inset-0 bg-black/0 pointer-events-none transition-all duration-300 md:hidden"
  >
  </div>

  <slot />

  <script is:inline>
    tsParticles.load("tsparticles", {
      particles: {
        number: { value: 100, density: { enable: true, value_area: 800 } },
        color: { value: "#082b57" },
        shape: { type: "circle" },
        opacity: {
          value: 0.5,
          random: true,
          animation: {
            enable: true,
            speed: 1,
            minimumValue: 0.1,
            sync: false,
          },
        },
        size: {
          value: 3,
          random: true,
          animation: {
            enable: true,
            speed: 2,
            minimumValue: 0.1,
            sync: false,
          },
        },
        links: {
          enable: true,
          distance: 150,
          color: "#082b57",
          opacity: 0.4,
          width: 1,
        },
        move: {
          enable: true,
          speed: 2,
          direction: "none",
          random: false,
          straight: false,
          outModes: { default: "bounce" },
          attract: { enable: false, rotateX: 600, rotateY: 1200 },
        },
      },
      interactivity: {
        detectsOn: "canvas",
        events: {
          onHover: { enable: true, mode: "grab" },
          resize: true,
        },
        modes: {
          grab: { distance: 140, links: { opacity: 1 } },
        },
      },
      background: {
        color: "#f9fafb",
      },
      detectRetina: true,
      loadJS: {
        mode: "defer",
      },
    });
  </script>

  <script is:inline>
    let lastScrollY = window.scrollY;
    const header = document.getElementById("header");

    // Only apply hide/show behavior on non-mobile devices
    const handleScroll = () => {
      if (window.innerWidth >= 768) {
        // md breakpoint in Tailwind
        if (lastScrollY < window.scrollY) {
          // Scrolling down
          header.style.transform = "translateY(-100%)";
        } else {
          // Scrolling up
          header.style.transform = "translateY(0)";
        }
      } else {
        // Always show on mobile
        header.style.transform = "translateY(0)";
      }
      lastScrollY = window.scrollY;
    };

    window.addEventListener("scroll", handleScroll);
    // Also check on resize in case user switches between mobile/desktop
    window.addEventListener("resize", handleScroll);
  </script>

  <script>
    document.addEventListener("DOMContentLoaded", () => {
      const mobileMenuButton = document.getElementById("mobile-menu-button");
      const closeMenuButton = document.getElementById("close-menu-button");
      const mobileMenu = document.getElementById("mobile-menu");
      let isMenuOpen = false;

      function toggleMenu(open: boolean) {
        isMenuOpen = open;
        const backdrop = document.getElementById("menu-backdrop");
        const banner = document.getElementById("poker-banner");
        const bannerHeight = banner?.offsetHeight || 0;

        if (!mobileMenu || !backdrop) return;

        if (isMenuOpen) {
          document.body.style.overflow = "hidden";
          mobileMenu.style.transform = "translateX(0)";
          mobileMenu.style.top = `${bannerHeight}px`;
          backdrop.style.backgroundColor = "rgba(0, 0, 0, 0.3)";
          backdrop.style.pointerEvents = "auto";
        } else {
          document.body.style.overflow = "";
          mobileMenu.style.transform = "translateX(100%)";
          backdrop.style.backgroundColor = "rgba(0, 0, 0, 0)";
          backdrop.style.pointerEvents = "none";
        }
      }

      if (mobileMenuButton && mobileMenu && closeMenuButton) {
        mobileMenuButton.addEventListener("click", () => toggleMenu(true));
        closeMenuButton.addEventListener("click", () => toggleMenu(false));

        // Close menu when clicking outside
        document.addEventListener("click", (e) => {
          const target = e.target as HTMLElement;
          if (
            isMenuOpen &&
            !mobileMenu.contains(target) &&
            !mobileMenuButton.contains(target)
          ) {
            toggleMenu(false);
          }
        });
      }
    });
  </script>

  <script is:inline>
    // Temporarily disabled banner code
    /*
    if (localStorage.getItem("poker-banner-dismissed") !== "true") {
      document.addEventListener("DOMContentLoaded", () => {
        const banner = document.getElementById("poker-banner");
        const header = document.getElementById("header");
        if (banner) {
          banner.classList.remove("hidden");
          // Add padding to body and adjust header position
          document.body.style.paddingTop = banner.offsetHeight + "px";
          if (header) {
            header.style.top = banner.offsetHeight + "px";
          }
        }
      });
    }

    function dismissBanner() {
      const banner = document.getElementById("poker-banner");
      const header = document.getElementById("header");
      if (banner) {
        banner.style.opacity = "0";
        banner.style.transform = "translateY(-100%)";
        banner.style.transition = "all 300ms ease-in-out";
        // Reset body padding and header position
        document.body.style.paddingTop = "0px";
        if (header) {
          header.style.top = "0px";
        }
        // Store dismissal in localStorage
        localStorage.setItem("poker-banner-dismissed", "true");
        // Remove banner after animation
        setTimeout(() => banner.remove(), 300);
      }
    }
    */
  </script>
</body>
